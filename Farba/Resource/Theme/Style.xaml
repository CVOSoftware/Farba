<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <Style x:Key="@Style/Border/Counter" TargetType="{x:Type Border}">
        <Setter Property="Width" Value="60"/>
    </Style>

    <Style x:Key="@Style/Border/Counter/ImageViewer" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Style/Border/Counter}">
        <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsNotSelectActivePalette}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="@Style/Border/Counter/ColorCombination" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Style/Border/Counter}">
        <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ActivePalette.PaletteListIsEmpty}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsNotSelectActivePalette}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="@Style/Window" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="{StaticResource ResourceKey=@FontFamily/ShareTechMono}" />
    </Style>

    <Style x:Key="@Style/WindowBackground" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource ResourceKey=@RadialGradientBrush/GrayToDarkGray}" />
    </Style>

    <Style x:Key="@Style/BackgroundControll" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray30}" />
    </Style>

    <Style x:Key="@Style/BackgroundView" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray60}" />
    </Style>

    <Style x:Key="@Style/BackgroundMegaGray" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"/>
    </Style>

    <Style x:Key="@Style/Button" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" />
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/WhiteSmoke}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Property=Padding}"
                        Background="{TemplateBinding Property=Background}"
                        BorderThickness="{TemplateBinding Property=BorderThickness}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray30}" />
                            <Setter Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" />
                            <Setter TargetName="Border" Property="Padding" Value="4" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/Button/Sort" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=@Style/Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ActivePalette.PaletteListIsEmpty}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsNotSelectActivePalette}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Style/RadioButton/CombinationType" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border 
                        Name="OuterBorder"
                        Width="26"
                        Height="26"
                        BorderThickness="1"
                        BorderBrush="{StaticResource ResourceKey=@SolidColorBrush/Blue}"
                        Background="{StaticResource ResourceKey=@SolidColorBrush/DarkGray}">
                        <Border Name="InnerBorder" Padding="3" BorderThickness="1" BorderBrush="Transparent">
                            <BulletDecorator>
                                <BulletDecorator.Bullet>
                                    <ContentPresenter />
                                </BulletDecorator.Bullet>
                            </BulletDecorator>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/DarkGray}" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DarkGray}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/RepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/TabControl" TargetType="TabControl">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Column="0"
                            Background="{StaticResource ResourceKey=@LinearGradientBrush/SingleToDoubleGray}"
                            Effect="{StaticResource ResourceKey=@DropShadowEffect/ShadowTabItemsColumn}">
                            <TabPanel
                                x:Name="HeaderPanel"
                                Margin="0,20,0,20"
                                Panel.ZIndex="1"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1" />
                        </Border>
                        <Border
                            x:Name="Border"
                            Grid.Column="1"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/TabControlViewer" TargetType="TabControl">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0">
                            <TabPanel
                                x:Name="HeaderPanel"
                                Panel.ZIndex="1"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1" />
                        </Border>
                        <Border
                            x:Name="Border"
                            Grid.Row="1"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/TabItem" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/WhiteSmoke}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border
                            x:Name="Border"
                            Width="60"
                            Height="60"
                            Margin="0, 0, 0, 5"
                            BorderThickness="1"
                            BorderBrush="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"
                            Background="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"
                            Cursor="Hand">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="12,2,12,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding ElementName=Border, Path=Background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/TabChm" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/WhiteSmoke}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border>
                            <Image
                                Width="30"
                                Height="30"
                                Source="{StaticResource ResourceKey=@Image/Converter}" />
                        </Border>
                        <Border
                            FocusVisualStyle="{x:Null}"
                            x:Name="Border"
                            Width="60"
                            Height="60"
                            Margin="0, 0, 0, 5"
                            BorderThickness="1"
                            BorderBrush="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"
                            Background="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"
                            Cursor="Hand">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="12,2,12,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding ElementName=Border, Path=Background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/TabItemViewer" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/WhiteSmoke}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border
                            x:Name="Border"
                            Width="100"
                            Padding="5"
                            Background="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"
                            Cursor="Hand">
                            <ContentPresenter
                                x:Name="ContentSite"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/Thumb" TargetType="{x:Type Thumb}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="Thumbs" Fill="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ScrolBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray60}">
                        <Track Name="PART_Track" IsDirectionReversed="True">
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ResourceKey=@Style/RepeatButton}" Command="ScrollBar.PageDownCommand"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ResourceKey=@Style/Thumb}" />
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ResourceKey=@Style/RepeatButton}" Command="ScrollBar.PageUpCommand"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Height" Value="10" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Width" Value="10" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                            Minimum="0"
                            Style="{StaticResource ResourceKey=@Style/ScrolBar}"
                            ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                            Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                            Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray60}">
                        <Track Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ResourceKey=@Style/Thumb}" Cursor="Hand"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Height" Value="10" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Width" Value="10" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/Label" TargetType="{x:Type Label}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/WhiteSmoke}" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="@Style/TextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray60}" />
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Height="{TemplateBinding Property=Height}"
                            HorizontalAlignment="{TemplateBinding Property=HorizontalAlignment}"
                            Background="{TemplateBinding Property=Background}"
                            BorderBrush="{TemplateBinding Property=BorderBrush}"
                            BorderThickness="{TemplateBinding Property=BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/CheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/WhiteSmoke}" />
        <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray60}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Width="15"
                            Height="15"
                            HorizontalAlignment="{TemplateBinding Property=HorizontalAlignment}"
                            Background="{TemplateBinding Property=Background}"
                            BorderBrush="{TemplateBinding Property=BorderBrush}"
                            BorderThickness="{TemplateBinding Property=BorderThickness}">
                            <Border
                                x:Name="Active"
                                Margin="2"
                                Background="{TemplateBinding Property=BorderBrush}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ListBoxItemImagesViewer" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Property=Padding}"
                        BorderBrush="Transparent"
                        BorderThickness="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray30}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray30}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ListBoxImagesViewer" TargetType="{x:Type ListBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=@Style/ListBoxItemImagesViewer}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <Image Source="{Binding Image}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Converter={StaticResource ResourceKey=@Converter/AdaptiveHeightConverter}}" Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ActualWidth, Converter={StaticResource @Converter/AdaptiveWidthConverter}}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer
                        CanContentScroll="True"
                        HorizontalScrollBarVisibility="Disabled"
                        Style="{StaticResource ResourceKey=@Style/ScrollViewer}"
                        VerticalScrollBarVisibility="Visible">
                        <Border Padding="{TemplateBinding Property=Padding}">
                            <ItemsPresenter />
                        </Border>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ListBoxItemCluster" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="border" Padding="{TemplateBinding Property=Padding}">
                        <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </ContentControl>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                            <Setter TargetName="border" Property="Padding" Value="4" />
                            <Setter TargetName="contentControl" Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ListBoxCluster" TargetType="{x:Type ListBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=@Style/ListBoxItemCluster}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Column="0"
                            Margin="0,0,10,0"
                            Background="{Binding Brush}"
                            BorderBrush="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"
                            BorderThickness="1" />
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding Percent, StringFormat=Процент: \{\0\}%}" />
                            <TextBlock Grid.Row="1" Text="{Binding Hex, StringFormat=HEX: \{\0\}}" />
                            <TextBlock Grid.Row="2" Text="{Binding Rgb, StringFormat=RGB: \{\0\}}" />
                        </Grid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Background="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray60}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ListBoxItemCombination" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0,0,0,10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Padding="{TemplateBinding Property=Padding}">
                        <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </ContentControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ListBoxCombination" TargetType="{x:Type ListBox}">
        <Style.Resources>
            <Style x:Key="@StackPanel/CentralOrientation" TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="@Border/Common" TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"/>
            </Style>
            <Style x:Key="@Border/Preview" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Border/Common}">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
            </Style>
            <Style x:Key="@Border/Preview/BrushOne" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Border/Preview}">
                <Setter Property="Background" Value="{Binding BrushOne}"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
            </Style>
            <Style x:Key="@Border/Preview/BrushTwo" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Border/Preview}">
                <Setter Property="Background" Value="{Binding BrushTwo}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
            </Style>
            <Style x:Key="@Border/Bottom/BorderInfo" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray30}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"/>
                <Setter Property="BorderThickness" Value="0,1,0,0"/>
            </Style>
            <Style x:Key="@Border/OuterSquareBrushOne" TargetType="{x:Type Border}">
                <Setter Property="Padding" Value="15,15,0,15"/>
                <Setter Property="Background" Value="{Binding BrushOne}"/>
            </Style>
            <Style x:Key="@Border/OuterSquareBrushTwo" TargetType="{x:Type Border}">
                <Setter Property="Padding" Value="0,15,15,15"/>
                <Setter Property="Background" Value="{Binding BrushTwo}"/>
            </Style>
            <Style x:Key="@Border/ColorDifference" TargetType="{x:Type Border}">
                <Setter Property="Width" Value="60"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="BorderThickness" Value="1, 0, 1, 0"/>
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"/>
            </Style>
            <Style x:Key="@Text/Center" TargetType="{x:Type TextBlock}">
                <Setter Property="TextAlignment" Value="Center"/>
            </Style>
            <Style x:Key="@Text/HVCenter" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ResourceKey=@Text/Center}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="@Text/Center/One" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ResourceKey=@Text/Center}">
                <Setter Property="Text" Value="{Binding ColorSpaceOne}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>
            <Style x:Key="@Text/Center/Two" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ResourceKey=@Text/Center}">
                <Setter Property="Text" Value="{Binding ColorSpaceTwo}"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style>
            <DataTemplate x:Key="@DataTemplate/Square">
                <DataTemplate.Resources>
                    <Style x:Key="@Border/InnerSquare" TargetType="{x:Type Border}">
                        <Setter Property="Padding" Value="10"/>
                    </Style>
                    <Style x:Key="@Border/InnerSquareBrushOne" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Border/InnerSquare}">
                        <Setter Property="Background" Value="{Binding BrushOne}"/>
                    </Style>
                    <Style x:Key="@Border/InnerSquareBrushTwo" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Border/InnerSquare}">
                        <Setter Property="Background" Value="{Binding BrushTwo}"/>
                    </Style>
                </DataTemplate.Resources>
                <Border x:Name="BorderOne" Style="{StaticResource ResourceKey=@Border/Common}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Style="{StaticResource ResourceKey=@Border/OuterSquareBrushOne}">
                                <Border Style="{StaticResource ResourceKey=@Border/InnerSquareBrushTwo}"/>
                            </Border>
                            <Border Grid.Column="1" Style="{StaticResource ResourceKey=@Border/OuterSquareBrushTwo}">
                                <Border Style="{StaticResource ResourceKey=@Border/InnerSquareBrushOne}"/>
                            </Border>
                        </Grid>
                        <Border x:Name="BorderTwo" Grid.Row="1" Style="{StaticResource ResourceKey=@Border/Bottom/BorderInfo}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0"
                                      VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0" x:Name="BorderOneInfo" Style="{StaticResource ResourceKey=@Border/Preview/BrushOne}"/>
                                    <TextBlock Grid.Column="1" x:Name="TextOne" Style="{StaticResource ResourceKey=@Text/Center/One}"/>
                                </Grid>
                                <Border x:Name="diffBorder" Grid.Column="1" Style="{StaticResource ResourceKey=@Border/ColorDifference}">
                                    <TextBlock x:Name="Diff" Style="{StaticResource @Text/HVCenter}" Text="{Binding Difference}"/>
                                </Border>
                                <Grid Grid.Column="2"
                                      VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" x:Name="TextTwo" Style="{StaticResource ResourceKey=@Text/Center/Two}"/>
                                    <Border Grid.Column="1" x:Name="BorderTwoInfo" Style="{StaticResource ResourceKey=@Border/Preview/BrushTwo}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="BorderOne" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" />
                        <Setter TargetName="BorderOne" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="BorderTwo" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="BorderOneInfo" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="BorderTwoInfo" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="diffBorder" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="diffBorder" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="TextOne" Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="TextTwo" Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate x:Key="@DataTemplate/Circle">
                <DataTemplate.Resources>
                    <Style x:Key="@Border/InnerCircle" TargetType="{x:Type Border}">
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="CornerRadius" Value="10" />
                    </Style>
                    <Style x:Key="@Border/InnerCircleBrushOne" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Border/InnerCircle}">
                        <Setter Property="Background" Value="{Binding BrushOne}"/>
                    </Style>
                    <Style x:Key="@Border/InnerCircleBrushTwo" TargetType="{x:Type Border}" BasedOn="{StaticResource ResourceKey=@Border/InnerCircle}">
                        <Setter Property="Background" Value="{Binding BrushTwo}"/>
                    </Style>
                </DataTemplate.Resources>
                <Border x:Name="BorderOne" Style="{StaticResource ResourceKey=@Border/Common}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Style="{StaticResource ResourceKey=@Border/OuterSquareBrushOne}">
                                <StackPanel Style="{StaticResource ResourceKey=@StackPanel/CentralOrientation}">
                                    <Border Margin="0, 0, 10, 0" Style="{StaticResource ResourceKey=@Border/InnerCircleBrushTwo}" />
                                    <Border Margin="0, 0, 10, 0" Style="{StaticResource ResourceKey=@Border/InnerCircleBrushTwo}" />
                                    <Border Margin="0, 0, 10, 0" Style="{StaticResource ResourceKey=@Border/InnerCircleBrushTwo}"/>
                                    <Border Margin="0, 0, 10, 0" Style="{StaticResource ResourceKey=@Border/InnerCircleBrushTwo}"/>
                                    <Border Style="{StaticResource ResourceKey=@Border/InnerCircle}"/>
                                </StackPanel>
                            </Border>
                            <Border Grid.Column="1" Style="{StaticResource ResourceKey=@Border/OuterSquareBrushTwo}">
                                <StackPanel Style="{StaticResource ResourceKey=@StackPanel/CentralOrientation}">
                                    <Border Style="{StaticResource ResourceKey=@Border/InnerCircle}"/>
                                    <Border Margin="10, 0, 0, 0" Style="{StaticResource ResourceKey=@Border/InnerCircleBrushOne}" />
                                    <Border Margin="10, 0, 0, 0" Style="{StaticResource ResourceKey=@Border/InnerCircleBrushOne}" />
                                    <Border Margin="10, 0, 0, 0" Style="{StaticResource ResourceKey=@Border/InnerCircleBrushOne}"/>
                                    <Border Margin="10, 0, 0, 0" Style="{StaticResource ResourceKey=@Border/InnerCircleBrushOne}"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                        <Border x:Name="BorderTwo" Grid.Row="1" Style="{StaticResource ResourceKey=@Border/Bottom/BorderInfo}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0"
                                      VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0" x:Name="BorderOneInfo" Style="{StaticResource ResourceKey=@Border/Preview/BrushOne}"/>
                                    <TextBlock Grid.Column="1" x:Name="TextOne" Style="{StaticResource ResourceKey=@Text/Center/One}"/>
                                </Grid>
                                <Border x:Name="diffBorder" Grid.Column="1" Style="{StaticResource ResourceKey=@Border/ColorDifference}">
                                    <TextBlock x:Name="Diff" Style="{StaticResource @Text/HVCenter}" Text="{Binding Difference}"/>
                                </Border>
                                <Grid Grid.Column="2"
                                      VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" x:Name="TextTwo" Style="{StaticResource ResourceKey=@Text/Center/Two}"/>
                                    <Border Grid.Column="1" x:Name="BorderTwoInfo" Style="{StaticResource ResourceKey=@Border/Preview/BrushTwo}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="BorderOne" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" />
                        <Setter TargetName="BorderOne" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="BorderTwo" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="BorderOneInfo" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="BorderTwoInfo" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="diffBorder" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="diffBorder" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="TextOne" Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                        <Setter TargetName="TextTwo" Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=@Style/ListBoxItemCombination}" />
        <Setter Property="ItemTemplate" Value="{DynamicResource Test}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Padding="10, 0">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ActivePalette.ColorCombinationType}" Value="{StaticResource ResourceKey=@ColorCombinationType/Square}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ItemTemplate" Value="{StaticResource @DataTemplate/Square}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ActivePalette.ColorCombinationType}" Value="{StaticResource ResourceKey=@ColorCombinationType/Circle}"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ItemTemplate" Value="{StaticResource @DataTemplate/Circle}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="@Style/ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border 
                        x:Name="Item"
                        Padding="2"
                        Background="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}">
                        <Border
                            x:Name="InnerBorder"
                            Padding="2"
                            BorderThickness="1"
                            BorderBrush="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}">
                            <TextBlock>
                                <ContentPresenter/>
                            </TextBlock>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Item" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="@Style/ComboBoxEnum" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>
                    <Border
                        x:Name="Border"
                        CornerRadius="0"
                        Background="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray60}"
                        BorderBrush="{StaticResource ResourceKey=@SolidColorBrush/Blue}"
                        BorderThickness="1" />
                    <Border 
                        x:Name="Border2"
                        Grid.Column="1"
                        CornerRadius="0" 
                        Background="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}" 
                        BorderBrush="{StaticResource ResourceKey=@SolidColorBrush/Blue}"
                        BorderThickness="0,1,1,1" />
                    <Path 
                        x:Name="Arrow"
                        Grid.Column="1"     
                        Fill="White"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"/>
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray30}"/>
                        <Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource ResourceKey=@SolidColorBrush/MegaGray}"/>
                        <Setter TargetName="Border2" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/DoubleGray30}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Border2" Property="Background" Value="{StaticResource ResourceKey=@SolidColorBrush/Blue}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="@Template/ComboBox"  TargetType="{x:Type ComboBox}">
                <Grid>
                    <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                    </ToggleButton>
                    <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="5, 3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                    <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="5, 3"
                            Focusable="True"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                    <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                        <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"
                                BorderThickness="1, 0, 1, 1"
                                BorderBrush="{StaticResource ResourceKey=@SolidColorBrush/Blue}"/>
                            <ScrollViewer SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Grid>
                    </Popup>
                </Grid>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=@SolidColorBrush/WhiteSmoke}"/>
        <Setter Property="Template" Value="{StaticResource ResourceKey=@Template/ComboBox}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=@Style/ComboBoxItem}"/>
    </Style>

</ResourceDictionary>